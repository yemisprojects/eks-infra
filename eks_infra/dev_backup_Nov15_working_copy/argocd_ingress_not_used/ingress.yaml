# # Annotations Reference: https://kubernetes-sigs.github.io/aws-load-balancer-controller/latest/guide/ingress/annotations/
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd
  namespace: argocd
  labels:
    app: argocd-ingress
  annotations:
    # Load Balancer Name
    alb.ingress.kubernetes.io/load-balancer-name: ingress-argocd
    # kubernetes.io/ingress.class: "nlb" 
    #(OLD INGRESS CLASS NOTATION - STILL WORKS BUT RECOMMENDED TO USE IngressClass Resource) # Additional Notes: https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.3/guide/ingress/ingress_class/#deprecated-kubernetesioingressclass-annotation
    # Ingress Core Settings
    alb.ingress.kubernetes.io/scheme: internet-facing
    # Health Check Settings
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP 
    # alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    # alb.ingress.kubernetes.io/healthcheck-path: /index.html    
    # alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    # alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    # alb.ingress.kubernetes.io/success-codes: '200'
    # alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    # alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
spec:
  ingressClassName: my-aws-ingress-class # Ingress Class
  defaultBackend:
    service:
      name: argocd-server
      port:
        number: 80                  
      

# # 1. If  "spec.ingressClassName: my-aws-ingress-class" not specified, will reference default ingress class on this kubernetes cluster
# # 2. Default Ingress class is nothing but for which ingress class we have the annotation `ingressclass.kubernetes.io/is-default-class: "true"`

# apiVersion: v1
# kind: Service
# metadata:
#   labels:
#     app: argogrpc
#   name: argogrpc
#   namespace: argocd
# spec:
#   ports:
#   - name: "80"
#     port: 80
#     protocol: TCP
#     targetPort: 8080
#   selector:
#     app.kubernetes.io/name: argocd-server
#   sessionAffinity: None
#   type: NodePort
# ---
#   apiVersion: networking.k8s.io/v1
#   kind: Ingress
#   metadata:
#     annotations:
#       alb.ingress.kubernetes.io/backend-protocol: HTTP
#       # Use this annotation (which must match a service name) to route traffic to HTTP2 backends.
#       alb.ingress.kubernetes.io/conditions.argogrpc: |
#         [{"field":"http-header","httpHeaderConfig":{"httpHeaderName": "Content-Type", "values":["application/grpc"]}}]
#       alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80}]'
#     name: argocd
#     namespace: argocd
#   spec:
#     rules:
#     - host: argocd.argoproj.io
#       http:
#         paths:
#         - path: /
#           backend:
#             service:
#               name: argogrpc
#               port:
#                 number: 80
#           pathType: Prefix
#         - path: /
#           backend:
#             service:
#               name: argocd-server
#               port:
#                 number: 80
#           pathType: Prefix
    # tls:
    # - hosts:
    #   - argocd.argoproj.io
